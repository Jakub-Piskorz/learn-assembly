     1                                  ; io.asm
     2                                  section .data
     3 00000000 48656C6C6F20776F72-         msg1        db  "Hello world!", 10, 0
     3 00000009 6C64210A00         
     4                                      msg1len     equ $ - msg1
     5 0000000E 596F7572207475726E-         msg2        db  "Your turn: ", 0
     5 00000017 3A2000             
     6                                      msg2len     equ $ - msg2
     7 0000001A 596F7520736169643A-         msg3        db  "You said: ", 0
     7 00000023 2000               
     8                                      msg3len     equ $ - msg3
     9                                      inputlen    equ 10
    10                                  section .bss
    11 00000000 <res Bh>                    input   resb    inputlen+1
    12                                  section .text
    13                                      global main
    14                                  main:
    15 00000000 55                      push rbp
    16 00000001 4889E5                  mov rbp, rsp
    17 00000004 48BE-                       mov rsi, msg1
    17 00000006 [0000000000000000] 
    18 0000000E BA0E000000                  mov rdx, msg1len
    19 00000013 E852000000                  call prints
    20                                      
    21 00000018 48BE-                       mov rsi, msg2
    21 0000001A [0E00000000000000] 
    22 00000022 BA0C000000                  mov rdx, msg2len
    23 00000027 E83E000000                  call prints
    24                                      
    25 0000002C 48BE-                       mov rsi, input
    25 0000002E [0000000000000000] 
    26 00000036 BA0A000000                  mov rdx, inputlen
    27 0000003B E83C000000                  call reads
    28                                      
    29 00000040 48BE-                       mov rsi, msg3
    29 00000042 [1A00000000000000] 
    30 0000004A BA0B000000                  mov rdx, msg3len
    31 0000004F E816000000                  call prints
    32                                      
    33 00000054 48BE-                       mov rsi, input
    33 00000056 [0000000000000000] 
    34 0000005E BA0A000000                  mov rdx, inputlen
    35 00000063 E802000000                  call prints
    36 00000068 C9                      leave
    37 00000069 C3                      ret    
    38                                  
    39                                  prints:
    40 0000006A 55                      push rbp
    41 0000006B 4889E5                  mov rbp, rsp
    42                                      ; rsi - address of string
    43                                      ; rdx - length of string
    44 0000006E B801000000                  mov rax, 1  ; write
    45 00000073 BF01000000                  mov rdi, 1  ; stdout
    46 00000078 0F05                        syscall
    47 0000007A C9                      leave
    48 0000007B C3                      ret
    49                                  
    50                                  reads:
    51 0000007C 55                      push rbp
    52 0000007D 4889E5                  mov rbp, rsp
    53                                      ; rsi - address if the inputbuffer
    54                                      ; rdi - length of inputbuffer
    55 00000080 B800000000                  mov rax, 0  ; read
    56 00000085 BF01000000                  mov rdi, 1  ; stdin
    57 0000008A 0F05                        syscall
    58 0000008C C9                      leave
    59 0000008D C3                      ret
